{"version":3,"sources":["app.js"],"names":["showSearchPlaceMarker","marker","setMap","map","mapModel","markers","length","i","title","getAnimation","setAnimation","google","maps","Animation","BOUNCE","panTo","position","isPlaceShow","observable","removeMaker","NoPlace","locations","location","lat","lng","category","noPlace","collectPlace","animateMaker","stopAllBounce","Location","data","this","showCollectBtn","ko","ViewModel","self","address","addressVal","filterVal","activePlace","area","toggleBtnStatus","locationList","observableArray","localStorage","$","filter","collectPlaces","toggleMenu","forEach","place","push","JSON","stringify","collectBtn","match","on","prop","havePlaces","search","val","placeReg","RegExp","change","newClps","parse","alert","j","clp","k","item","goToThisPlace","isPlaceChosen","handleOverTime","setTimeout","done","result","noPlaceStatus","regeocode","ajax","url","fail","clearTimeout","Object","prototype","toString","call","indexOf","status","formatted_address","aois","collect","Math","parseFloat","collectStatus","applyBindings","index"],"mappings":"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","file":"app.js","sourcesContent":["var mapModel = {\r\n  // 预设的地点 title: 地点名称， location: 地点经纬度 lat 纬度、lng 经度，category：地点属性分类  作为筛选下拉列表的值\r\n  locations: [\r\n    { title: '世界之窗', location: { lat: 22.534717, lng: 113.973417 }, category: 'scenic' },\r\n    { title: '深圳欢乐谷', location: { lat: 22.540292, lng: 113.981859 }, category: 'scenic' },\r\n    { title: '深圳大学', location: { lat: 22.532893, lng: 113.932986 }, category: 'university' },\r\n    { title: '南方科技大学', location: { lat: 22.593842, lng: 113.995071 }, category: 'university' },\r\n    { title: '深圳职业技术学院', location: { lat: 22.587492, lng: 113.952206 }, category: 'university' },\r\n    { title: '深圳信息职业技术学院', location: { lat: 22.68737, lng: 114.217627 }, category: 'university' },\r\n    { title: '深圳会展中心', location: { lat: 22.530732, lng: 114.059951 }, category: 'scenic' },\r\n    { title: '深圳宝安国际机场', location: { lat: 22.636828, lng: 113.814606 }, category: 'scenic' },\r\n    { title: '沃尔玛购物广场深圳蛇口店', location: { lat: 22.503374, lng: 113.923642 }, category: 'market' },\r\n    { title: '南头沃尔玛（深圳南新分店）', location: { lat: 22.539438, lng: 113.919678 }, category: 'market' },\r\n    { title: '海雅缤纷城', location: { lat: 22.559261, lng: 113.904427 }, category: 'market' },\r\n    { title: '港隆城百货', location: { lat: 22.582196, lng: 113.880805 }, category: 'market' },\r\n    { title: '罗湖区东门商业步行街', location: { lat: 22.546237, lng: 114.119385 }, category: 'scenic' },\r\n    { title: '深圳湾公园', location: { lat: 22.50292, lng: 113.952903 }, category: 'scenic' },\r\n    { title: '深圳仙湖植物园', location: { lat: 22.573886, lng: 114.170688 }, category: 'scenic' },\r\n    { title: '福田区红树林自然保护区', location: { lat: 22.524569, lng: 114.00961 }, category: 'scenic' },\r\n    { title: '肯德基（港隆城店）', location: { lat: 22.581809, lng: 113.88163 }, category: 'restaurant' },\r\n    { title: '肯德基（桃源村店）', location: { lat: 22.557867, lng: 113.984546 }, category: 'restaurant' },\r\n    { title: '麦当劳（深圳海城路餐厅)', location: { lat: 22.566553, lng: 113.868129 }, category: 'restaurant' },\r\n    { title: '麦当劳（高新路店)', location: { lat: 22.523109, lng: 113.947803 }, category: 'restaurant' },\r\n  ],\r\n  // 没有符合地点时列表显示\r\n  noPlace: { title: '没有搜索到该地点', location: { lat: '', lng: '' }, category: 'none' },\r\n  // 创建marker的数组\r\n  markers: [],\r\n  // 收藏地点\r\n  collectPlace: []\r\n};\r\n/**\r\n* 选中列表的地点，使地图中对应悬浮标出现动画\r\n* title：html中地点的title\r\n*/\r\nfunction animateMaker(title) {\r\n  for (var i = 0; i < mapModel.markers.length; i++) {\r\n    if (title === mapModel.markers[i].title) {\r\n      // 如果悬浮标已经有动画就返回\r\n      if (mapModel.markers[i].getAnimation() !== null) return;\r\n      // 停止所有maker的悬浮标动画\r\n      stopAllBounce();\r\n      // 设置该地点的marker有动画\r\n      mapModel.markers[i].setAnimation(google.maps.Animation.BOUNCE);\r\n      // 地图视图偏移\r\n      map.panTo(mapModel.markers[i].position);\r\n    }\r\n  }\r\n}\r\n\r\n/*\r\n* 显示对应的地点maker\r\n* marker: mapModel.markers里的marker元素\r\n*/\r\nfunction showSearchPlaceMarker(marker) {\r\n  marker.setMap(map);\r\n}\r\n\r\n// 移除所有的maker\r\nfunction removeMaker(marker) {\r\n  marker.setMap(null);\r\n}\r\n\r\n/**\r\n* 为mapModel.locations的地点都创建一个ko的对象\r\n*/\r\nvar Location = function(data) {\r\n  this.title = ko.observable(data.title);\r\n  this.location = ko.observable(data.location);\r\n  this.category = ko.observable(data.category);\r\n  this.address = ko.observable('');\r\n  this.area = ko.observable('');\r\n  // 地点在列表中是否可见\r\n  this.isPlaceShow = ko.observable(true);\r\n  // 收藏按钮是否显示\r\n  this.showCollectBtn = ko.observable(true);\r\n};\r\n\r\n// 搜索无结果时，locations绑定该对象\r\nvar NoPlace = function(data) {\r\n  this.title = ko.observable(data.title);\r\n  this.address = ko.observable('');\r\n  this.area = ko.observable('');\r\n  this.isPlaceShow = ko.observable(true);\r\n  this.noPlaceStatus = ko.observable(true);\r\n  // 收藏按钮不显示\r\n  this.showCollectBtn = ko.observable(false);\r\n};\r\n\r\nvar ViewModel = function() {\r\n  var self = this;\r\n  // 获取地点输入框\r\n  var address = $('#address');\r\n  // 保存address的value\r\n  var addressVal;\r\n  // 获取筛选器按钮\r\n  var filter = $('#filter');\r\n  // 筛选器的值\r\n  var filterVal;\r\n  // 选中的地点\r\n  this.activePlace = ko.observable();\r\n  // 左边菜单栏切换按钮 默认不添加class\r\n  this.toggleBtnStatus = ko.observable(null);\r\n  this.activePlace = ko.observable(null);\r\n  // 保存mapModel的location\r\n  this.locationList = ko.observableArray([]);\r\n\r\n  mapModel.locations.forEach(function(place) {\r\n    self.locationList.push(new Location(place));\r\n  });\r\n  // 用在html中作地点数据绑定\r\n  this.locations = ko.observable(self.locationList());\r\n  // 无符合的地点，地点列表文本的显示\r\n  this.noPlace = ko.observable(new NoPlace(mapModel.noPlace));\r\n  // 收藏地点\r\n  this.collectPlaces = ko.observableArray([]);\r\n  if (!localStorage.collectPlace) {\r\n    localStorage.collectPlace = JSON.stringify(mapModel.collectPlace);\r\n  }\r\n  // 收藏按钮显示\r\n  this.collectBtn = ko.observable(true);\r\n  /**\r\n  * 菜单切换按钮，点击隐藏或显示左边菜单栏\r\n  */\r\n  this.toggleMenu = function() {\r\n    self.toggleBtnStatus() === null ?\r\n    self.toggleBtnStatus(false) : self.toggleBtnStatus(!self.toggleBtnStatus());\r\n  };\r\n\r\n  // 地点输入框请求\r\n  address.on('input', function() {\r\n    // 重置筛选列表的选中状态\r\n    filter.prop('selectedIndex', 0);\r\n    // 重置locations\r\n    self.locations(self.locationList());\r\n    // 不请求的情况\r\n    // 与上次输入的地点相同\r\n    // 输入为空\r\n    if (addressVal == address.val() || address.val() == ' ') {\r\n      return;\r\n    }\r\n    // 保留input的值，下次输入用作对比前后值\r\n    addressVal = address.val();\r\n\r\n    // 使用正则表达式，查找输入的地址是否有空格， 至少1个空格\r\n    if (addressVal !== null) {\r\n      var response = addressVal.match(/\\s+$/g);\r\n      // 如果找到有空格符就返回\r\n      if (response !== null) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    // 有符合条件的地点标记，搜索不到符合条件的地方时，用该标记作错误处理\r\n    var havePlaces = false;\r\n    // 创建正则表达式\r\n    var placeReg = new RegExp(addressVal, 'g');\r\n    // 搜索文本地点\r\n    for (var i = 0; i < mapModel.locations.length; i++) {\r\n      // 地图上移除不符合条件的的地点marker\r\n      removeMaker(mapModel.markers[i]);\r\n      var search = mapModel.locations[i].title.match(placeReg);\r\n      if (search !== null) {\r\n        self.locations()[i].isPlaceShow(true);\r\n        showSearchPlaceMarker(mapModel.markers[i]);\r\n        havePlaces = true;\r\n      } else {\r\n        self.locations()[i].isPlaceShow(false);\r\n      }\r\n    }\r\n    // 搜索不到的地点显示\r\n    if (havePlaces === false) {\r\n      self.locations(self.noPlace());\r\n    }\r\n  });\r\n\r\n  // 筛选地点下拉列表\r\n  filter.change(function() {\r\n    filterVal = filter.val();\r\n    // 清空地点输入框的内容\r\n    address.val('');\r\n    // 如果locations的值为收藏的值或者是无符合地点的值，就重置locations\r\n    if (self.locations() === self.collectPlaces() || self.locations() === self.noPlace()) {\r\n      self.locations(self.locationList());\r\n    }\r\n    // 如果不选择就返回\r\n    if (filterVal === 'none') {\r\n      return;\r\n    }\r\n    // 清除选中的地点\r\n    self.activePlace('');\r\n    // 如果等于全部就重置地点\r\n    if (filterVal === 'all') {\r\n      // 显示所有的地点maker\r\n      for (var i = 0; i < mapModel.markers.length; i++) {\r\n        showSearchPlaceMarker(mapModel.markers[i]);\r\n        self.locations()[i].isPlaceShow(true);\r\n      }\r\n      return;\r\n    }\r\n    // 收藏类\r\n    if (filterVal === 'collect') {\r\n      var newClps = JSON.parse(localStorage.collectPlace);\r\n      if (newClps.length === 0) {\r\n        alert('还没有收藏的地点，赶紧收藏您喜欢的地点吧！！！');\r\n        // 重置筛选列表的选中状态\r\n        filter.prop('selectedIndex', 0);\r\n        return;\r\n      }\r\n      // 清除原有的值\r\n      self.collectPlaces([]);\r\n      newClps.forEach(function(item) {\r\n        var clp = new Location(item);\r\n        // 隐藏收藏按钮\r\n        clp.showCollectBtn(false);\r\n        self.collectPlaces.push(clp);\r\n      });\r\n      // 显示marker\r\n      for (var k = 0; k < mapModel.locations.length; k++) {\r\n        removeMaker(mapModel.markers[k]);\r\n        // 如果收藏的地点title与mapModel.locations的title相同\r\n        newClps.forEach(function(item) {\r\n          if (mapModel.locations[k].title === item.title) {\r\n            showSearchPlaceMarker(mapModel.markers[k]);\r\n          }\r\n        })\r\n      }\r\n      self.locations(self.collectPlaces());\r\n      return;\r\n    }\r\n\r\n    for (var j = 0; j < mapModel.locations.length; j++) {\r\n      removeMaker(mapModel.markers[j]);\r\n      // 如果地点的属性与筛选器选择的值一样，就添加到搜索到的地方\r\n      if (mapModel.locations[j].category === filterVal) {\r\n        self.locations()[j].isPlaceShow(true);\r\n        showSearchPlaceMarker(mapModel.markers[j]);\r\n      } else {\r\n        self.locations()[j].isPlaceShow(false);\r\n      }\r\n    }\r\n  });\r\n\r\n  /**\r\n  * 判断该地点是否被选中 ，选中的改变title的背景颜色\r\n  */\r\n  this.isPlaceChosen = function(place) {\r\n    return self.activePlace() === place;\r\n  };\r\n\r\n  /**\r\n  * 点击列表的地点,地图中的对应地点marker浮动\r\n  * place： html中传进来的地点对象\r\n  */\r\n  this.goToThisPlace = function(place) {\r\n    // 如果没搜索到地点，点击无效\r\n    if (place.noPlaceStatus) return;\r\n    // 设置选中的地点\r\n    self.activePlace(place);\r\n    // 显示地图悬浮标\r\n    animateMaker(place.title());\r\n    // 获取经纬度\r\n    var lat = place.location().lat;\r\n    var lng = place.location().lng;\r\n\r\n    // 手动定义超时响应报错，网络问题或者服务器一直不响应时，用来提示使用者\r\n    var handleOverTime = setTimeout(function() {\r\n      alert('响应超时，请刷新页面重试');\r\n    }, 6000);\r\n    // 使用jquery的ajax请求地点详细信息\r\n    // 使用高德地图API获取\r\n    $.ajax({\r\n      url: 'http://restapi.amap.com/v3/geocode/regeo?&key=c9f0e0d3698d77a99521d30be23978df&location=' + lng\r\n      + ',' + lat + '&output=json&extensions=all',\r\n    }) // 成功响应\r\n    .done(function(result) {\r\n      clearTimeout(handleOverTime);\r\n      // 返回的结果是一个对象才处理\r\n      if (Object.prototype.toString.call(result).indexOf('Object') !== -1) {\r\n        // 成功查询\r\n        if (result.status === '1') {\r\n          if (result.regeocode) {\r\n            // 地址\r\n            place.address('地址： ' + result.regeocode.formatted_address);\r\n            // 面积\r\n            if (result.regeocode.aois.length > 0) {\r\n              var area = Math.round(parseFloat(result.regeocode.aois[0].area));\r\n              place.area('面积：' + area + ' 平方米');\r\n            }\r\n          }\r\n        } else {\r\n          alert('请求失败');\r\n        }\r\n      } else {\r\n        alert('返回的结果类型有错');\r\n      }\r\n    })\r\n    .fail(function(result) {\r\n      clearTimeout(handleOverTime);\r\n      alert('请求超时,请重试');\r\n    });\r\n  };\r\n\r\n  /**\r\n  * 收藏地点\r\n  */\r\n  this.collectPlace = function(place) {\r\n    // 用ko.toJS转换ko的对象\r\n    var collect = ko.toJS(place);\r\n    // 收藏状态\r\n    var collectStatus = false;\r\n    // 先获取localStorage本来的值\r\n    mapModel.collectPlace = JSON.parse(localStorage.collectPlace);\r\n    mapModel.collectPlace.forEach(function(index) {\r\n      if (index.title === collect.title) {\r\n        collectStatus = true;\r\n      }\r\n    });\r\n    // 如果已经收藏就返回\r\n    if (collectStatus === true) {\r\n      alert('该地点已经收藏');\r\n      return;\r\n    }\r\n    // 再加上现在点击的值\r\n    mapModel.collectPlace.push(collect);\r\n    localStorage.collectPlace = JSON.stringify(mapModel.collectPlace);\r\n    alert('成功收藏该地点');\r\n  };\r\n};\r\n\r\nko.applyBindings(new ViewModel());\r\n"]}