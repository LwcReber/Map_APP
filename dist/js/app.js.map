{"version":3,"sources":["app.js"],"names":["showSearchPlaceMarker","i","mapModel","markers","length","marker","map","title","setMapException","getAnimation","message","stopAllBounce","google","maps","Animation","BOUNCE","panTo","position","setMap","e","this","category","observable","isPlaceShow","locations","location","lat","lng","noPlace","collectPlace","animateMaker","Location","noPlaceStatus","ko","data","showCollectBtn","address","area","self","NoPlace","filter","filterVal","activePlace","ViewModel","addressVal","$","localStorage","toggleBtnStatus","collectBtn","locationList","observableArray","toggleMenu","forEach","place","collectPlaces","JSON","stringify","response","prop","placeReg","val","removeMaker","RegExp","match","havePlaces","alert","k","j","goToThisPlace","newClps","item","clp","push","isPlaceChosen","url","done","result","handleOverTime","regeocode","aois","ajax","clearTimeout","call","indexOf","status","formatted_address","Math","round","index","fail","collectStatus","collect","toJS","applyBindings","parse"],"mappings":"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","file":"app.js","sourcesContent":["var mapModel = {\r\n  // 预设的地点 title: 地点名称， location: 地点经纬度 lat 纬度、lng 经度，category：地点属性分类  作为筛选下拉列表的值\r\n  locations: [\r\n    { title: '世界之窗', location: { lat: 22.534717, lng: 113.973417 }, category: 'scenic' },\r\n    { title: '深圳欢乐谷', location: { lat: 22.540292, lng: 113.981859 }, category: 'scenic' },\r\n    { title: '深圳大学', location: { lat: 22.532893, lng: 113.932986 }, category: 'university' },\r\n    { title: '南方科技大学', location: { lat: 22.593842, lng: 113.995071 }, category: 'university' },\r\n    { title: '深圳职业技术学院', location: { lat: 22.587492, lng: 113.952206 }, category: 'university' },\r\n    { title: '深圳信息职业技术学院', location: { lat: 22.68737, lng: 114.217627 }, category: 'university' },\r\n    { title: '深圳会展中心', location: { lat: 22.530732, lng: 114.059951 }, category: 'scenic' },\r\n    { title: '深圳宝安国际机场', location: { lat: 22.636828, lng: 113.814606 }, category: 'scenic' },\r\n    { title: '沃尔玛购物广场深圳蛇口店', location: { lat: 22.503374, lng: 113.923642 }, category: 'market' },\r\n    { title: '南头沃尔玛（深圳南新分店）', location: { lat: 22.539438, lng: 113.919678 }, category: 'market' },\r\n    { title: '海雅缤纷城', location: { lat: 22.559261, lng: 113.904427 }, category: 'market' },\r\n    { title: '港隆城百货', location: { lat: 22.582196, lng: 113.880805 }, category: 'market' },\r\n    { title: '罗湖区东门商业步行街', location: { lat: 22.546237, lng: 114.119385 }, category: 'scenic' },\r\n    { title: '深圳湾公园', location: { lat: 22.50292, lng: 113.952903 }, category: 'scenic' },\r\n    { title: '深圳仙湖植物园', location: { lat: 22.573886, lng: 114.170688 }, category: 'scenic' },\r\n    { title: '福田区红树林自然保护区', location: { lat: 22.524569, lng: 114.00961 }, category: 'scenic' },\r\n    { title: '肯德基（港隆城店）', location: { lat: 22.581809, lng: 113.88163 }, category: 'restaurant' },\r\n    { title: '肯德基（桃源村店）', location: { lat: 22.557867, lng: 113.984546 }, category: 'restaurant' },\r\n    { title: '麦当劳（深圳海城路餐厅)', location: { lat: 22.566553, lng: 113.868129 }, category: 'restaurant' },\r\n    { title: '麦当劳（高新路店)', location: { lat: 22.523109, lng: 113.947803 }, category: 'restaurant' },\r\n  ],\r\n  // 没有符合地点时列表显示\r\n  noPlace: { title: '没有搜索到该地点', location: { lat: '', lng: '' }, category: 'none' },\r\n  // 创建marker的数组\r\n  markers: [],\r\n  // 收藏地点\r\n  collectPlace: []\r\n};\r\n/**\r\n* 选中列表的地点，使地图中对应悬浮标出现动画\r\n* title：html中地点的title\r\n*/\r\nfunction animateMaker(title) {\r\n  for (var i = 0; i < mapModel.markers.length; i++) {\r\n    if (title === mapModel.markers[i].title) {\r\n      // 如果悬浮标已经有动画就返回\r\n      if (mapModel.markers[i].getAnimation() !== null) return;\r\n      // 停止所有maker的悬浮标动画\r\n      stopAllBounce();\r\n      // 设置该地点的marker有动画\r\n      mapModel.markers[i].setAnimation(google.maps.Animation.BOUNCE);\r\n      // 地图视图偏移\r\n      map.panTo(mapModel.markers[i].position);\r\n    }\r\n  }\r\n}\r\n\r\n/*\r\n* 显示对应的地点maker\r\n* marker: mapModel.markers里的marker元素\r\n*/\r\nfunction showSearchPlaceMarker(marker) {\r\n  try {\r\n    marker.setMap(map);\r\n  } catch (e) {\r\n    function setMapException(message) {\r\n      this.message = message;\r\n    }\r\n    throw new setMapException('地图没有被加载，无法设置显示marker');\r\n  }\r\n}\r\n\r\n// 移除所有的maker\r\nfunction removeMaker(marker) {\r\n  try {\r\n    marker.setMap(null);\r\n  } catch (e) {\r\n    function setMapException(message) {\r\n      this.message = message;\r\n    }\r\n    throw new setMapException('地图没有被加载，无法移除marker');\r\n  }\r\n}\r\n\r\n/**\r\n* 为mapModel.locations的地点都创建一个ko的对象\r\n*/\r\nvar Location = function(data) {\r\n  this.title = ko.observable(data.title);\r\n  this.location = ko.observable(data.location);\r\n  this.category = ko.observable(data.category);\r\n  this.address = ko.observable('');\r\n  this.area = ko.observable('');\r\n  // 地点在列表中是否可见\r\n  this.isPlaceShow = ko.observable(true);\r\n  // 收藏按钮是否显示\r\n  this.showCollectBtn = ko.observable(true);\r\n};\r\n\r\n// 搜索无结果时，locations绑定该对象\r\nvar NoPlace = function(data) {\r\n  this.title = ko.observable(data.title);\r\n  this.address = ko.observable('');\r\n  this.area = ko.observable('');\r\n  this.isPlaceShow = ko.observable(true);\r\n  this.noPlaceStatus = ko.observable(true);\r\n  // 收藏按钮不显示\r\n  this.showCollectBtn = ko.observable(false);\r\n};\r\n\r\nvar ViewModel = function() {\r\n  var self = this;\r\n  // 获取地点输入框\r\n  var address = $('#address');\r\n  // 保存address的value\r\n  var addressVal;\r\n  // 获取筛选器按钮\r\n  var filter = $('#filter');\r\n  // 筛选器的值\r\n  var filterVal;\r\n  // 选中的地点\r\n  this.activePlace = ko.observable();\r\n  // 左边菜单栏切换按钮 默认不添加class\r\n  this.toggleBtnStatus = ko.observable(null);\r\n  this.activePlace = ko.observable(null);\r\n  // 保存mapModel的location\r\n  this.locationList = ko.observableArray([]);\r\n\r\n  mapModel.locations.forEach(function(place) {\r\n    self.locationList.push(new Location(place));\r\n  });\r\n  // 用在html中作地点数据绑定\r\n  this.locations = ko.observable(self.locationList());\r\n  // 无符合的地点，地点列表文本的显示\r\n  this.noPlace = ko.observable(new NoPlace(mapModel.noPlace));\r\n  // 收藏地点\r\n  this.collectPlaces = ko.observableArray([]);\r\n  if (!localStorage.collectPlace) {\r\n    localStorage.collectPlace = JSON.stringify(mapModel.collectPlace);\r\n  }\r\n  // 收藏按钮显示\r\n  this.collectBtn = ko.observable(true);\r\n  /**\r\n  * 菜单切换按钮，点击隐藏或显示左边菜单栏\r\n  */\r\n  this.toggleMenu = function() {\r\n    self.toggleBtnStatus() === null ?\r\n    self.toggleBtnStatus(false) : self.toggleBtnStatus(!self.toggleBtnStatus());\r\n  };\r\n\r\n  // 地点输入框请求\r\n  address.on('input', function() {\r\n    // 重置筛选列表的选中状态\r\n    filter.prop('selectedIndex', 0);\r\n    // 重置locations\r\n    self.locations(self.locationList());\r\n    // 不请求的情况\r\n    // 与上次输入的地点相同\r\n    // 输入为空\r\n    if (addressVal == address.val() || address.val() == ' ') {\r\n      return;\r\n    }\r\n    // 保留input的值，下次输入用作对比前后值\r\n    addressVal = address.val();\r\n\r\n    // 使用正则表达式，查找输入的地址是否有空格， 至少1个空格\r\n    if (addressVal !== null) {\r\n      var response = addressVal.match(/\\s+$/g);\r\n      // 如果找到有空格符就返回\r\n      if (response !== null) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    // 有符合条件的地点标记，搜索不到符合条件的地方时，用该标记作错误处理\r\n    var havePlaces = false;\r\n    // 创建正则表达式\r\n    var placeReg = new RegExp(addressVal, 'g');\r\n    // 搜索文本地点\r\n    for (var i = 0; i < mapModel.locations.length; i++) {\r\n      // 地图上移除不符合条件的的地点marker\r\n      removeMaker(mapModel.markers[i]);\r\n      var search = mapModel.locations[i].title.match(placeReg);\r\n      if (search !== null) {\r\n        self.locations()[i].isPlaceShow(true);\r\n        showSearchPlaceMarker(mapModel.markers[i]);\r\n        havePlaces = true;\r\n      } else {\r\n        self.locations()[i].isPlaceShow(false);\r\n      }\r\n    }\r\n    // 搜索不到的地点显示\r\n    if (havePlaces === false) {\r\n      self.locations(self.noPlace());\r\n    }\r\n  });\r\n\r\n  // 筛选地点下拉列表\r\n  filter.change(function() {\r\n    filterVal = filter.val();\r\n    // 清空地点输入框的内容\r\n    address.val('');\r\n    // 如果locations的值为收藏的值或者是无符合地点的值，就重置locations\r\n    if (self.locations() === self.collectPlaces() || self.locations() === self.noPlace()) {\r\n      self.locations(self.locationList());\r\n    }\r\n    // 如果不选择就返回\r\n    if (filterVal === 'none') {\r\n      return;\r\n    }\r\n    // 清除选中的地点\r\n    self.activePlace('');\r\n    // 如果等于全部就重置地点\r\n    if (filterVal === 'all') {\r\n      // 显示所有的地点maker\r\n      for (var i = 0; i < mapModel.markers.length; i++) {\r\n        showSearchPlaceMarker(mapModel.markers[i]);\r\n        self.locations()[i].isPlaceShow(true);\r\n      }\r\n      return;\r\n    }\r\n    // 收藏类\r\n    if (filterVal === 'collect') {\r\n      var newClps = JSON.parse(localStorage.collectPlace);\r\n      if (newClps.length === 0) {\r\n        alert('还没有收藏的地点，赶紧收藏您喜欢的地点吧！！！');\r\n        // 重置筛选列表的选中状态\r\n        filter.prop('selectedIndex', 0);\r\n        return;\r\n      }\r\n      // 清除原有的值\r\n      self.collectPlaces([]);\r\n      newClps.forEach(function(item) {\r\n        var clp = new Location(item);\r\n        // 隐藏收藏按钮\r\n        clp.showCollectBtn(false);\r\n        self.collectPlaces.push(clp);\r\n      });\r\n      self.locations(self.collectPlaces());\r\n      // 显示marker\r\n      for (var k = 0; k < mapModel.locations.length; k++) {\r\n        removeMaker(mapModel.markers[k]);\r\n        // 如果收藏的地点title与mapModel.locations的title相同\r\n        newClps.forEach(function(item) {\r\n          if (mapModel.locations[k].title === item.title) {\r\n            showSearchPlaceMarker(mapModel.markers[k]);\r\n          }\r\n        });\r\n      }\r\n      return;\r\n    }\r\n\r\n    for (var j = 0; j < mapModel.locations.length; j++) {\r\n      removeMaker(mapModel.markers[j]);\r\n      // 如果地点的属性与筛选器选择的值一样，就添加到搜索到的地方\r\n      if (mapModel.locations[j].category === filterVal) {\r\n        self.locations()[j].isPlaceShow(true);\r\n        showSearchPlaceMarker(mapModel.markers[j]);\r\n      } else {\r\n        self.locations()[j].isPlaceShow(false);\r\n      }\r\n    }\r\n  });\r\n\r\n  /**\r\n  * 判断该地点是否被选中 ，选中的改变title的背景颜色\r\n  */\r\n  this.isPlaceChosen = function(place) {\r\n    return self.activePlace() === place;\r\n  };\r\n\r\n  /**\r\n  * 点击列表的地点,地图中的对应地点marker浮动\r\n  * place： html中传进来的地点对象\r\n  */\r\n  this.goToThisPlace = function(place) {\r\n    // 如果没搜索到地点，点击无效\r\n    if (place.noPlaceStatus) return;\r\n    // 设置选中的地点\r\n    self.activePlace(place);\r\n    // 显示地图悬浮标\r\n    animateMaker(place.title());\r\n    // 获取经纬度\r\n    var lat = place.location().lat;\r\n    var lng = place.location().lng;\r\n\r\n    // 手动定义超时响应报错，网络问题或者服务器一直不响应时，用来提示使用者\r\n    var handleOverTime = setTimeout(function() {\r\n      alert('响应超时，请刷新页面重试');\r\n    }, 6000);\r\n    // 使用jquery的ajax请求地点详细信息\r\n    // 使用高德地图API获取\r\n    $.ajax({\r\n      url: 'http://restapi.amap.com/v3/geocode/regeo?&key=c9f0e0d3698d77a99521d30be23978df&location=' + lng\r\n      + ',' + lat + '&output=json&extensions=all',\r\n    }) // 成功响应\r\n    .done(function(result) {\r\n      clearTimeout(handleOverTime);\r\n      // 返回的结果是一个对象才处理\r\n      if (Object.prototype.toString.call(result).indexOf('Object') !== -1) {\r\n        // 成功查询\r\n        if (result.status === '1') {\r\n          if (result.regeocode) {\r\n            // 地址\r\n            place.address('地址： ' + result.regeocode.formatted_address);\r\n            // 面积\r\n            if (result.regeocode.aois.length > 0) {\r\n              var area = Math.round(parseFloat(result.regeocode.aois[0].area));\r\n              place.area('面积：' + area + ' 平方米');\r\n            }\r\n          }\r\n        } else {\r\n          alert('请求失败');\r\n        }\r\n      } else {\r\n        alert('返回的结果类型有错');\r\n      }\r\n    })\r\n    .fail(function(result) {\r\n      clearTimeout(handleOverTime);\r\n      alert('请求超时,请重试');\r\n    });\r\n  };\r\n\r\n  /**\r\n  * 收藏地点\r\n  */\r\n  this.collectPlace = function(place) {\r\n    // 用ko.toJS转换ko的对象\r\n    var collect = ko.toJS(place);\r\n    // 收藏状态\r\n    var collectStatus = false;\r\n    // 先获取localStorage本来的值\r\n    mapModel.collectPlace = JSON.parse(localStorage.collectPlace);\r\n    mapModel.collectPlace.forEach(function(index) {\r\n      if (index.title === collect.title) {\r\n        collectStatus = true;\r\n      }\r\n    });\r\n    // 如果已经收藏就返回\r\n    if (collectStatus === true) {\r\n      alert('该地点已经收藏');\r\n      return;\r\n    }\r\n    // 再加上现在点击的值\r\n    mapModel.collectPlace.push(collect);\r\n    localStorage.collectPlace = JSON.stringify(mapModel.collectPlace);\r\n    alert('成功收藏该地点');\r\n  };\r\n};\r\n\r\nko.applyBindings(new ViewModel());\r\n"]}